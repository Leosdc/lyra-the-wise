# geracao_conteudo.py ‚Äî Gera√ß√£o de NPCs, monstros, itens, puzzles, etc.
import discord
from discord.ext import commands
from utils import chamar_groq, get_system_prompt
from config import sistemas_rpg
from sistemas_rpg import SISTEMAS_DISPONIVEIS
from monstros_database import buscar_monstro, listar_monstros_por_sistema, formatar_monstro
import random

def register(bot: commands.Bot):
    """Registra comandos de gera√ß√£o de conte√∫do."""

    def get_sistema_canal(channel_id):
        """Retorna o sistema configurado para o canal."""
        return sistemas_rpg.get(channel_id, "dnd5e")

    # ========== MONSTRO ==========
    @bot.command(name="monstro")
    async def monstro(ctx, *, nome: str = None):
        """Busca ou gera um monstro. Uso: !monstro <nome> ou !monstro para gerar novo"""
        sistema = get_sistema_canal(ctx.channel.id)
        
        if nome:
            # Primeiro tenta buscar no banco de dados
            monstro_db = buscar_monstro(nome, sistema)
            
            if monstro_db:
                # Encontrou no banco de dados
                texto = formatar_monstro(monstro_db)
                embed = discord.Embed(
                    title=f"üëπ {monstro_db['nome']}",
                    description=texto[:4000],
                    color=discord.Color.dark_red()
                )
                embed.set_footer(text=f"Sistema: {SISTEMAS_DISPONIVEIS[sistema]['nome']} | Do banco de dados")
                await ctx.send(embed=embed)
                return
            
            # N√£o encontrou, gera com IA
            system_prompt = get_system_prompt(sistema)
            prompt = f"Crie as estat√≠sticas completas de combate para o monstro **{nome}** no sistema {SISTEMAS_DISPONIVEIS[sistema]['nome']}. Inclua: atributos, ataques, habilidades especiais, pontos de vida e n√≠vel de desafio. Seja detalhado e balanceado."
        else:
            # Gera monstro aleat√≥rio
            system_prompt = get_system_prompt(sistema)
            prompt = f"Crie um monstro original e interessante para o sistema {SISTEMAS_DISPONIVEIS[sistema]['nome']}, com estat√≠sticas completas de combate, habilidades √∫nicas e uma breve descri√ß√£o atmosf√©rica. Seja criativo!"
        
        mensagens = [
            {"role": "system", "content": system_prompt},
            {"role": "user", "content": prompt}
        ]
        
        await ctx.send(f"üëπ {'Gerando' if nome else 'Criando'} monstro{' ' + nome if nome else ' aleat√≥rio'}...")
        resposta = await chamar_groq(mensagens, max_tokens=1000)
        
        embed = discord.Embed(
            title=f"üëπ {nome if nome else 'Monstro Gerado'}",
            description=resposta[:4000],
            color=discord.Color.dark_red()
        )
        embed.set_footer(text=f"Sistema: {SISTEMAS_DISPONIVEIS[sistema]['nome']} | Gerado por IA")
        await ctx.send(embed=embed)

    # ========== LISTAR MONSTROS ==========
    @bot.command(name="monstros")
    async def listar_monstros(ctx):
        """Lista todos os monstros dispon√≠veis no banco de dados para o sistema atual."""
        sistema = get_sistema_canal(ctx.channel.id)
        monstros = listar_monstros_por_sistema(sistema)
        
        if not monstros:
            await ctx.send(f"‚ùå Nenhum monstro catalogado para {SISTEMAS_DISPONIVEIS[sistema]['nome']} ainda.")
            return
        
        lista = "\n".join([f"‚Ä¢ {m}" for m in monstros])
        embed = discord.Embed(
            title=f"üëπ Monstros - {SISTEMAS_DISPONIVEIS[sistema]['nome']}",
            description=f"Use `!monstro <nome>` para ver detalhes\n\n{lista}",
            color=discord.Color.dark_red()
        )
        embed.set_footer(text=f"{len(monstros)} monstros dispon√≠veis")
        await ctx.send(embed=embed)

    # ========== NPC ==========
    @bot.command(name="npc")
    async def npc(ctx, *, descricao: str = None):
        """Gera um NPC completo."""
        sistema = get_sistema_canal(ctx.channel.id)
        system_prompt = get_system_prompt(sistema)
        
        if descricao:
            prompt = f"Crie um NPC detalhado baseado em: {descricao}. Inclua: nome, personalidade marcante, apar√™ncia distintiva, motiva√ß√µes claras, um segredo interessante e estat√≠sticas b√°sicas para {SISTEMAS_DISPONIVEIS[sistema]['nome']}."
        else:
            prompt = f"Crie um NPC interessante e memor√°vel com: nome √∫nico, personalidade marcante, apar√™ncia distintiva, motiva√ß√µes claras, um segredo intrigante e estat√≠sticas b√°sicas para {SISTEMAS_DISPONIVEIS[sistema]['nome']}."
        
        mensagens = [
            {"role": "system", "content": system_prompt},
            {"role": "user", "content": prompt}
        ]
        
        await ctx.send("üé≠ Gerando NPC...")
        resposta = await chamar_groq(mensagens, max_tokens=800)
        
        embed = discord.Embed(
            title="üé≠ NPC Gerado",
            description=resposta[:4000],
            color=discord.Color.blue()
        )
        await ctx.send(embed=embed)

    # ========== ENCONTRO ==========
    @bot.command(name="encontro")
    async def encontro(ctx, nivel: int = None, dificuldade: str = "medio"):
        """Gera um encontro balanceado. Uso: !encontro <n√≠vel> <facil/medio/dificil>"""
        sistema = get_sistema_canal(ctx.channel.id)
        system_prompt = get_system_prompt(sistema)
        
        if not nivel:
            nivel = 5  # Padr√£o
        
        dif_map = {
            "facil": "f√°cil",
            "f√°cil": "f√°cil",
            "medio": "m√©dio",
            "m√©dio": "m√©dio",
            "dificil": "dif√≠cil",
            "dif√≠cil": "dif√≠cil"
        }
        dificuldade = dif_map.get(dificuldade.lower(), "m√©dio")
        
        prompt = f"Crie um encontro de combate balanceado para um grupo de n√≠vel {nivel} no sistema {SISTEMAS_DISPONIVEIS[sistema]['nome']}. Dificuldade: {dificuldade}. Inclua: inimigos com estat√≠sticas completas, t√°ticas de combate, descri√ß√£o do ambiente e poss√≠veis recompensas."
        
        mensagens = [
            {"role": "system", "content": system_prompt},
            {"role": "user", "content": prompt}
        ]
        
        await ctx.send(f"‚öîÔ∏è Gerando encontro n√≠vel {nivel} ({dificuldade})...")
        resposta = await chamar_groq(mensagens, max_tokens=1200)
        
        embed = discord.Embed(
            title=f"‚öîÔ∏è Encontro - N√≠vel {nivel} ({dificuldade.capitalize()})",
            description=resposta[:4000],
            color=discord.Color.orange()
        )
        await ctx.send(embed=embed)

    # ========== ARMADILHA ==========
    @bot.command(name="armadilha")
    async def armadilha(ctx, dificuldade: str = "medio"):
        """Gera uma armadilha. Uso: !armadilha <facil/medio/dificil>"""
        sistema = get_sistema_canal(ctx.channel.id)
        system_prompt = get_system_prompt(sistema)
        
        dif_map = {
            "facil": "f√°cil",
            "f√°cil": "f√°cil",
            "medio": "m√©dio",
            "m√©dio": "m√©dio",
            "dificil": "dif√≠cil",
            "dif√≠cil": "dif√≠cil"
        }
        dificuldade = dif_map.get(dificuldade.lower(), "m√©dio")
        
        prompt = f"Crie uma armadilha criativa para {SISTEMAS_DISPONIVEIS[sistema]['nome']}. Dificuldade: {dificuldade}. Inclua: mecanismo de ativa√ß√£o, efeito, CD para detectar, CD para desarmar, dano/efeito e poss√≠vel forma de evitar ou mitigar."
        
        mensagens = [
            {"role": "system", "content": system_prompt},
            {"role": "user", "content": prompt}
        ]
        
        await ctx.send(f"ü™§ Gerando armadilha ({dificuldade})...")
        resposta = await chamar_groq(mensagens, max_tokens=600)
        
        embed = discord.Embed(
            title=f"ü™§ Armadilha ({dificuldade.capitalize()})",
            description=resposta[:4000],
            color=discord.Color.red()
        )
        await ctx.send(embed=embed)

    # ========== ITEM ==========
    @bot.command(name="item")
    async def item(ctx, *, tipo: str = None):
        """Gera um item m√°gico/especial. Uso: !item <tipo opcional>"""
        sistema = get_sistema_canal(ctx.channel.id)
        system_prompt = get_system_prompt(sistema)
        
        if tipo:
            prompt = f"Crie um item m√°gico/especial do tipo '{tipo}' para {SISTEMAS_DISPONIVEIS[sistema]['nome']}. Inclua: nome evocativo, descri√ß√£o visual, propriedades mec√¢nicas, hist√≥ria ou origem e raridade."
        else:
            prompt = f"Crie um item m√°gico/especial criativo para {SISTEMAS_DISPONIVEIS[sistema]['nome']}. Inclua: nome evocativo, descri√ß√£o visual detalhada, propriedades mec√¢nicas interessantes, uma breve hist√≥ria ou origem e raridade apropriada."
        
        mensagens = [
            {"role": "system", "content": system_prompt},
            {"role": "user", "content": prompt}
        ]
        
        await ctx.send("‚ú® Gerando item m√°gico...")
        resposta = await chamar_groq(mensagens, max_tokens=700)
        
        embed = discord.Embed(
            title="‚ú® Item M√°gico",
            description=resposta[:4000],
            color=discord.Color.gold()
        )
        await ctx.send(embed=embed)

    # ========== TESOURO ==========
    @bot.command(name="tesouro")
    async def tesouro(ctx, nivel: int = None):
        """Gera tesouro balanceado. Uso: !tesouro <n√≠vel>"""
        sistema = get_sistema_canal(ctx.channel.id)
        system_prompt = get_system_prompt(sistema)
        
        if not nivel:
            nivel = 5
        
        prompt = f"Crie um tesouro balanceado para grupo de n√≠vel {nivel} em {SISTEMAS_DISPONIVEIS[sistema]['nome']}. Inclua: moedas/dinheiro, itens mundanos valiosos, 1-2 itens m√°gicos apropriados e descri√ß√£o visual do tesouro."
        
        mensagens = [
            {"role": "system", "content": system_prompt},
            {"role": "user", "content": prompt}
        ]
        
        await ctx.send(f"üí∞ Gerando tesouro para n√≠vel {nivel}...")
        resposta = await chamar_groq(mensagens, max_tokens=700)
        
        embed = discord.Embed(
            title=f"üí∞ Tesouro - N√≠vel {nivel}",
            description=resposta[:4000],
            color=discord.Color.gold()
        )
        await ctx.send(embed=embed)

    # ========== PUZZLE ==========
    @bot.command(name="puzzle")
    async def puzzle(ctx, *, tema: str = None):
        """Gera um enigma/quebra-cabe√ßa. Uso: !puzzle <tema opcional>"""
        sistema = get_sistema_canal(ctx.channel.id)
        system_prompt = get_system_prompt(sistema)
        
        if tema:
            prompt = f"Crie um enigma/puzzle interessante com o tema '{tema}'. Inclua: descri√ß√£o do puzzle, pistas dispon√≠veis, solu√ß√£o e consequ√™ncias de falha/sucesso. Seja criativo e desafiador."
        else:
            prompt = f"Crie um enigma/puzzle criativo e desafiador. Inclua: descri√ß√£o visual e narrativa do puzzle, pistas sutis mas justas, solu√ß√£o clara e consequ√™ncias interessantes de falha/sucesso."
        
        mensagens = [
            {"role": "system", "content": system_prompt},
            {"role": "user", "content": prompt}
        ]
        
        await ctx.send("üß© Gerando puzzle...")
        resposta = await chamar_groq(mensagens, max_tokens=800)
        
        embed = discord.Embed(
            title="üß© Enigma",
            description=resposta[:4000],
            color=discord.Color.purple()
        )
        await ctx.send(embed=embed)

    # ========== VIL√ÉO ==========
    @bot.command(name="vilao")
    async def vilao(ctx, *, tipo: str = None):
        """Gera um vil√£o completo. Uso: !vilao <tipo opcional>"""
        sistema = get_sistema_canal(ctx.channel.id)
        system_prompt = get_system_prompt(sistema)
        
        if tipo:
            prompt = f"Crie um vil√£o memor√°vel do tipo '{tipo}' para {SISTEMAS_DISPONIVEIS[sistema]['nome']}. Inclua: nome, apar√™ncia marcante, personalidade complexa, motiva√ß√µes profundas, plano maligno, estat√≠sticas completas e uma fraqueza ou vulnerabilidade interessante."
        else:
            prompt = f"Crie um vil√£o memor√°vel e complexo para {SISTEMAS_DISPONIVEIS[sistema]['nome']}. Inclua: nome impactante, apar√™ncia distintiva, personalidade tridimensional, motiva√ß√µes que fa√ßam sentido (mesmo que distorcidas), plano detalhado, estat√≠sticas completas de combate e uma fraqueza ou vulnerabilidade interessante."
        
        mensagens = [
            {"role": "system", "content": system_prompt},
            {"role": "user", "content": prompt}
        ]
        
        await ctx.send("üòà Gerando vil√£o...")
        resposta = await chamar_groq(mensagens, max_tokens=1200)
        
        embed = discord.Embed(
            title="üòà Vil√£o",
            description=resposta[:4000],
            color=discord.Color.dark_purple()
        )
        await ctx.send(embed=embed)

    # ========== CENA ==========
    @bot.command(name="cena")
    async def cena(ctx, *, descricao: str = None):
        """Descreve uma cena dramaticamente. Uso: !cena <descri√ß√£o b√°sica>"""
        sistema = get_sistema_canal(ctx.channel.id)
        system_prompt = get_system_prompt(sistema)
        
        if not descricao:
            await ctx.send("‚ùå Use: `!cena <descri√ß√£o b√°sica>` - Ex: `!cena taverna movimentada`")
            return
        
        prompt = f"Descreva a seguinte cena de forma dram√°tica e imersiva: '{descricao}'. Use linguagem evocativa, apele aos 5 sentidos, crie atmosfera e termine com um gancho para a√ß√£o. Seja cinematogr√°fico e envolvente."
        
        mensagens = [
            {"role": "system", "content": system_prompt},
            {"role": "user", "content": prompt}
        ]
        
        await ctx.send("üé¨ Criando cena...")
        resposta = await chamar_groq(mensagens, max_tokens=600)
        
        embed = discord.Embed(
            title="üé¨ Cena",
            description=resposta[:4000],
            color=discord.Color.teal()
        )
        await ctx.send(embed=embed)

    # ========== NOME ==========
    @bot.command(name="nome")
    async def nome(ctx, *, tipo: str = "fantasia"):
        """Gera lista de nomes. Uso: !nome <tipo> - Ex: √©lfico, an√£o, orc, humano, etc"""
        sistema = get_sistema_canal(ctx.channel.id)
        system_prompt = get_system_prompt(sistema)
        
        prompt = f"Gere uma lista de 10 nomes criativos do tipo '{tipo}' apropriados para {SISTEMAS_DISPONIVEIS[sistema]['nome']}. Varie entre nomes masculinos e femininos. Apenas liste os nomes, sem explica√ß√µes."
        
        mensagens = [
            {"role": "system", "content": system_prompt},
            {"role": "user", "content": prompt}
        ]
        
        await ctx.send(f"üìù Gerando nomes de {tipo}...")
        resposta = await chamar_groq(mensagens, max_tokens=400)
        
        embed = discord.Embed(
            title=f"üìù Nomes - {tipo.capitalize()}",
            description=resposta[:4000],
            color=discord.Color.blue()
        )
        await ctx.send(embed=embed)

    # ========== MOTIVA√á√ÉO ==========
    @bot.command(name="motivacao")
    async def motivacao(ctx):
        """Sorteia uma motiva√ß√£o aleat√≥ria para NPC."""
        motivacoes = [
            "üí∞ Gan√¢ncia - Busca riqueza acima de tudo",
            "‚öîÔ∏è Vingan√ßa - Quer punir aqueles que o prejudicaram",
            "üëë Poder - Deseja controle e influ√™ncia",
            "‚ù§Ô∏è Amor - Movido por paix√£o rom√¢ntica ou familiar",
            "üõ°Ô∏è Prote√ß√£o - Quer defender algu√©m ou algo",
            "üéì Conhecimento - Busca verdades ocultas",
            "üôè F√© - Guiado por cren√ßas religiosas",
            "‚öñÔ∏è Justi√ßa - Busca fazer o que √© certo",
            "üé≠ Reden√ß√£o - Tenta corrigir erros do passado",
            "üåü Gl√≥ria - Quer fama e reconhecimento",
            "üîÆ Destino - Acredita ter uma miss√£o prof√©tica",
            "üò± Medo - Age para evitar algo terr√≠vel",
            "üé® Cria√ß√£o - Quer deixar um legado art√≠stico",
            "üèÉ Liberdade - Busca escapar de algemas (literais ou metaf√≥ricas)",
            "ü§ù Lealdade - Devotado a pessoa, grupo ou ideal",
            "üíÄ Morte - Obsess√£o com mortalidade (pr√≥pria ou alheia)",
            "üå± Sobreviv√™ncia - Far√° qualquer coisa para viver",
            "üòà Caos - Deseja destruir ordem estabelecida",
            "üß© Curiosidade - Movido por fasc√≠nio pelo desconhecido",
            "üíî Perda - Ainda lida com trauma de perdas passadas"
        ]
        
        motivacao = random.choice(motivacoes)
        embed = discord.Embed(
            title="üé≤ Motiva√ß√£o Aleat√≥ria",
            description=motivacao,
            color=discord.Color.random()
        )
        await ctx.send(embed=embed)

    print("‚úÖ geracao_conteudo carregado com sucesso!")