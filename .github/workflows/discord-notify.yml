name: ü§ñ Auto Version & Discord Notify (Lyra Style)

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write  # necess√°rio para criar tags e atualizar o README

jobs:
  auto_version:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Clona o reposit√≥rio
      - name: Checkout do reposit√≥rio
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Detecta n√∫mero de vers√£o no commit (ex: v2.4.0)
      - name: Detectar n√∫mero de vers√£o no commit
        id: version
        run: |
          COMMIT_MSG="${{ github.event.head_commit.message }}"
          echo "üß© Mensagem do commit: $COMMIT_MSG"
          if [[ "$COMMIT_MSG" =~ v[0-9]+\.[0-9]+\.[0-9]+ ]]; then
            VERSION=$(echo "$COMMIT_MSG" | grep -oE "v[0-9]+\.[0-9]+\.[0-9]+")
            echo "‚úÖ Vers√£o detectada: $VERSION"
            echo "VERSION=$VERSION" >> $GITHUB_ENV
          else
            echo "‚ö†Ô∏è Nenhuma vers√£o detectada ‚Äî commit normal."
            echo "SKIP=true" >> $GITHUB_ENV
          fi

      # 3Ô∏è‚É£ Atualiza badge de vers√£o no README.md
      - name: Atualizar badge de vers√£o no README
        if: env.SKIP != 'true'
        run: |
          echo "ü™Ñ Atualizando badge de vers√£o no README.md..."
          sed -i -E "s/Version-[0-9]+\.[0-9]+\.[0-9]+/Version-${VERSION}/" readme.md
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add readme.md
          git commit -m "Atualiza badge de vers√£o para ${VERSION}" || echo "üü° Nenhuma mudan√ßa detectada."
          git push || true

      # 4Ô∏è‚É£ Cria e envia a tag automaticamente (com autentica√ß√£o segura)
      - name: Criar tag autom√°tica
        if: env.SKIP != 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git tag $VERSION
          git push https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git $VERSION
          echo "üè∑Ô∏è Tag $VERSION criada e enviada com sucesso!"

      # 5Ô∏è‚É£ L√™ o √∫ltimo changelog com fallback autom√°tico
      - name: Obter changelog recente
        if: env.SKIP != 'true'
        run: |
          LATEST_CHANGELOG=$(awk '/^## /{if (NR!=1) exit} {print}' changelog.md)
          if [ -z "$LATEST_CHANGELOG" ]; then
            echo "‚ö†Ô∏è Nenhum changelog encontrado. Usando fallback."
            LATEST_CHANGELOG="Nenhum changelog dispon√≠vel nesta vers√£o."
          fi
          echo "LATEST_CHANGELOG<<EOF" >> $GITHUB_ENV
          echo "$LATEST_CHANGELOG" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          echo "üìú √öltimo changelog preparado."

      # 6Ô∏è‚É£ Envia mensagem formatada com embed estilizada (Lyra Style)
      - name: Enviar notifica√ß√£o ao Discord
        if: env.SKIP != 'true'
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: |
            {
              "username": "The Bard",
              "avatar_url": "https://raw.githubusercontent.com/Leosdc/lyra-the-wise/main/assets/lyra_avatar.png",
              "embeds": [{
                "title": "üßô Nova vers√£o `${{ env.VERSION }}` publicada automaticamente!",
                "color": 11259375,
                "fields": [
                  {
                    "name": "üì¶ Reposit√≥rio",
                    "value": "[`${{ github.repository }}`](https://github.com/${{ github.repository }})",
                    "inline": true
                  },
                  {
                    "name": "üë§ Autor",
                    "value": "${{ github.actor }}",
                    "inline": true
                  },
                  {
                    "name": "üïê Data",
                    "value": "${{ github.event.head_commit.timestamp }}",
                    "inline": false
                  },
                  {
                    "name": "ü™∂ Changelog",
                    "value": "```md\n${{ env.LATEST_CHANGELOG }}\n```"
                  }
                ],
                "thumbnail": {
                  "url": "https://raw.githubusercontent.com/Leosdc/lyra-the-wise/main/assets/lyra_icon.png"
                },
                "footer": {
                  "text": "Lyra the Wise ‚Ä¢ Build autom√°tico do GitHub Actions"
                }
              }]
            }

      # 7Ô∏è‚É£ Confirma√ß√£o final no log
      - name: Confirmar envio
        if: env.SKIP != 'true'
        run: echo "‚úÖ Vers√£o $VERSION publicada, tag enviada e notifica√ß√£o entregue com sucesso!"
